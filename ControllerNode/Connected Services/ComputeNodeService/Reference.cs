//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ControllerNode.ComputeNodeService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ComputeNodeService.IComputeNode")]
    public interface IComputeNode {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IComputeNode/IsWorking", ReplyAction="http://tempuri.org/IComputeNode/IsWorkingResponse")]
        bool IsWorking();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IComputeNode/IsWorking", ReplyAction="http://tempuri.org/IComputeNode/IsWorkingResponse")]
        System.IAsyncResult BeginIsWorking(System.AsyncCallback callback, object asyncState);
        
        bool EndIsWorking(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IComputeNode/RestorePassword", ReplyAction="http://tempuri.org/IComputeNode/RestorePasswordResponse")]
        ComputeNodeServiceLib.RestorePasswordResult RestorePassword(string passwordHash, char[] startSymbolsRange);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IComputeNode/RestorePassword", ReplyAction="http://tempuri.org/IComputeNode/RestorePasswordResponse")]
        System.IAsyncResult BeginRestorePassword(string passwordHash, char[] startSymbolsRange, System.AsyncCallback callback, object asyncState);
        
        ComputeNodeServiceLib.RestorePasswordResult EndRestorePassword(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IComputeNodeChannel : ControllerNode.ComputeNodeService.IComputeNode, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IsWorkingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public IsWorkingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RestorePasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RestorePasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ComputeNodeServiceLib.RestorePasswordResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ComputeNodeServiceLib.RestorePasswordResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ComputeNodeClient : System.ServiceModel.ClientBase<ControllerNode.ComputeNodeService.IComputeNode>, ControllerNode.ComputeNodeService.IComputeNode {
        
        private BeginOperationDelegate onBeginIsWorkingDelegate;
        
        private EndOperationDelegate onEndIsWorkingDelegate;
        
        private System.Threading.SendOrPostCallback onIsWorkingCompletedDelegate;
        
        private BeginOperationDelegate onBeginRestorePasswordDelegate;
        
        private EndOperationDelegate onEndRestorePasswordDelegate;
        
        private System.Threading.SendOrPostCallback onRestorePasswordCompletedDelegate;
        
        public ComputeNodeClient() {
        }
        
        public ComputeNodeClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ComputeNodeClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ComputeNodeClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ComputeNodeClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<IsWorkingCompletedEventArgs> IsWorkingCompleted;
        
        public event System.EventHandler<RestorePasswordCompletedEventArgs> RestorePasswordCompleted;
        
        public bool IsWorking() {
            return base.Channel.IsWorking();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginIsWorking(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginIsWorking(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndIsWorking(System.IAsyncResult result) {
            return base.Channel.EndIsWorking(result);
        }
        
        private System.IAsyncResult OnBeginIsWorking(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginIsWorking(callback, asyncState);
        }
        
        private object[] OnEndIsWorking(System.IAsyncResult result) {
            bool retVal = this.EndIsWorking(result);
            return new object[] {
                    retVal};
        }
        
        private void OnIsWorkingCompleted(object state) {
            if ((this.IsWorkingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.IsWorkingCompleted(this, new IsWorkingCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void IsWorkingAsync() {
            this.IsWorkingAsync(null);
        }
        
        public void IsWorkingAsync(object userState) {
            if ((this.onBeginIsWorkingDelegate == null)) {
                this.onBeginIsWorkingDelegate = new BeginOperationDelegate(this.OnBeginIsWorking);
            }
            if ((this.onEndIsWorkingDelegate == null)) {
                this.onEndIsWorkingDelegate = new EndOperationDelegate(this.OnEndIsWorking);
            }
            if ((this.onIsWorkingCompletedDelegate == null)) {
                this.onIsWorkingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnIsWorkingCompleted);
            }
            base.InvokeAsync(this.onBeginIsWorkingDelegate, null, this.onEndIsWorkingDelegate, this.onIsWorkingCompletedDelegate, userState);
        }
        
        public ComputeNodeServiceLib.RestorePasswordResult RestorePassword(string passwordHash, char[] startSymbolsRange) {
            return base.Channel.RestorePassword(passwordHash, startSymbolsRange);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRestorePassword(string passwordHash, char[] startSymbolsRange, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRestorePassword(passwordHash, startSymbolsRange, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public ComputeNodeServiceLib.RestorePasswordResult EndRestorePassword(System.IAsyncResult result) {
            return base.Channel.EndRestorePassword(result);
        }
        
        private System.IAsyncResult OnBeginRestorePassword(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string passwordHash = ((string)(inValues[0]));
            char[] startSymbolsRange = ((char[])(inValues[1]));
            return this.BeginRestorePassword(passwordHash, startSymbolsRange, callback, asyncState);
        }
        
        private object[] OnEndRestorePassword(System.IAsyncResult result) {
            ComputeNodeServiceLib.RestorePasswordResult retVal = this.EndRestorePassword(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRestorePasswordCompleted(object state) {
            if ((this.RestorePasswordCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RestorePasswordCompleted(this, new RestorePasswordCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RestorePasswordAsync(string passwordHash, char[] startSymbolsRange) {
            this.RestorePasswordAsync(passwordHash, startSymbolsRange, null);
        }
        
        public void RestorePasswordAsync(string passwordHash, char[] startSymbolsRange, object userState) {
            if ((this.onBeginRestorePasswordDelegate == null)) {
                this.onBeginRestorePasswordDelegate = new BeginOperationDelegate(this.OnBeginRestorePassword);
            }
            if ((this.onEndRestorePasswordDelegate == null)) {
                this.onEndRestorePasswordDelegate = new EndOperationDelegate(this.OnEndRestorePassword);
            }
            if ((this.onRestorePasswordCompletedDelegate == null)) {
                this.onRestorePasswordCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRestorePasswordCompleted);
            }
            base.InvokeAsync(this.onBeginRestorePasswordDelegate, new object[] {
                        passwordHash,
                        startSymbolsRange}, this.onEndRestorePasswordDelegate, this.onRestorePasswordCompletedDelegate, userState);
        }
    }
}
